#ifndef CNS_PARM_H_
#define CNS_PARM_H_

#include <AMReX_REAL.H>
#include <AMReX_GpuMemory.H>

struct Parm
{
    amrex::Real eos_gamma = 1.4;
    amrex::Real eos_mu = 28.97e-3;  // mean molecular weight kg/mol

    amrex::Real Pr  = 0.72;     // Prandtl number
    amrex::Real C_S = 1.458e-5; // constant in Sutherland's law
    amrex::Real T_S = 110.4;    // Sutherland temperature

    amrex::Real smallr = 1.e-19;
    amrex::Real smallp = 1.e-10;

    amrex::Real Ru = amrex::Real(8.31451);
    amrex::Real cv = Ru / (eos_mu * (eos_gamma-amrex::Real(1.0)));
    amrex::Real cp = eos_gamma * Ru / (eos_mu * (eos_gamma-amrex::Real(1.0)));
    amrex::Real Rspec = Ru/eos_mu;
     // void Initialize ();
};

// struct ProbParm
// {
//     amrex::Real p_l = 1.0;
//     amrex::Real p_r = 0.1;
//     amrex::Real rho_l = 1.0;
//     amrex::Real rho_r = 0.125;
//     amrex::Real u_l = 0.0;
//     amrex::Real u_r = 0.0;
// };
#endif
